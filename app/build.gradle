plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.devtools.ksp'
    id 'io.gitlab.arturbosch.detekt'
}

apply from: "$rootDir/gradle/report.gradle"

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("./local.properties")))

android {
    compileSdk Integer.valueOf(target_sdk_version)
    buildToolsVersion build_tools_version

    defaultConfig {
        applicationId application_id + '.app'
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode Integer.valueOf(version_code)
        versionName version_name
        multiDexEnabled true
        testInstrumentationRunner "androidx.benchmark.junit4.AndroidBenchmarkRunner"

        buildConfigField "String", "API_KEY", localProperties['apiKey']
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
        benchmark {
            initWith release
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            proguardFiles("benchmark-rules.pro")
            debuggable false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    viewBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                jacoco.excludes = ['jdk.internal.*']
            }
        }
    }
    namespace 'com.santimattius.template'
}

detekt {
    config = files("${project.rootDir}/config/detekt/detekt.yml")
    baseline = file("$rootDir/detekt-baseline.xml")
    autoCorrect = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation libs.kotlin.stdlib
    implementation libs.core.ktx
    implementation libs.glide.core

    implementation libs.bundles.ui
    implementation libs.bundles.lifecycle
    implementation libs.bundles.coroutine
    implementation libs.bundles.retrofit
    implementation libs.bundles.serializable

    implementation libs.room.ktx
    implementation libs.room.runtime
    ksp libs.room.compiler

    implementation libs.koin.android
    implementation libs.koin.coroutines

    testImplementation libs.junit
    testImplementation libs.bundles.unitTesting
    androidTestImplementation libs.bundles.androidTesting


}